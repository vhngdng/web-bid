name: Build and deploy
on:
  push:
    branches:
      - master
    paths:
      - "backend/demo/spring-resource-server/**"
      - "front-end/**"
      - ".github/workflows/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Backend Build and push Docker
        uses: docker/build-push-action@v4
        with:
          context: ./backend/demo/spring-resource-server
          dockerfile: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: vuhoangdung/web-bid-backend:latest

      - name: Frontend Build and push Docker
        uses: docker/build-push-action@v4
        with:
          context: ./front-end
          dockerfile: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: vuhoangdung/web-bid-frontend:latest

  deploy:
    needs: build

    env:
      DIGITALOCEAN_DROPLET_IP: ${{ secrets.DIGITALOCEAN_DROPLET_IP }}
      USER: ${{ secrets.USER_SERVER }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout files
        uses: actions/checkout@v3

      # - name: install ssh keys
      #   run: |
      #     cat >>~/.ssh/config <<END
      #     Host staging
      #       HostName $DIGITALOCEAN_DROPLET_IP
      #       User $USER
      #       IdentityFile ~/.ssh/id_rsa
      #       StrictHostKeyChecking no
      #     END
      #     install -m 600 -D /dev/null ~/.ssh/id_rsa
      #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
      #     echo "ssh-keyscan -H ${{ secrets.DIGITALOCEAN_DROPLET_IP }}" >> ~/.ssh/known_hosts
      #     ssh -v ${{ secrets.DIGITALOCEAN_DROPLET_IP }} /bin/true
      # uses: webfactory/ssh-agent@v0.7.0
      # with:
      #   ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install SSH key of target
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.DIGITALOCEAN_DROPLET_IP }} # will be appended to existing .ssh/known_hosts
          config: | # will be appended to existing .ssh/config
            Host target
              HostName $DIGITALOCEAN_DROPLET_IP
              User user-of-target
              IdentityFile ~/.ssh/id_rsa
              StrictHostKeyChecking no

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_DROPLET_IP }}
          username: ${{ secrets.USER_SERVER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # port: ${{ secrets.DIGITALOCEAN_DROPLET_IP }}
          script: whoami

      - name: SCP via port-forwarding
        run: scp \
          ${GITHUB_WORKSPACE}/config ${GITHUB_WORKSPACE}/postgre ${GITHUB_WORKSPACE}/.env ${GITHUB_WORKSPACE}/docker-compose.yml ${GITHUB_WORKSPACE}/deploy.sh \
          ${{ secrets.USER_SERVER }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }}:./web-bit

      - name: Create env file
        run: |
          echo "${{ secrets.DOCKERCOMPOSE_ENV }}" >> .env

      - name: Deploy
        run:
          # rsync -avz --chmod=ugo=rwX \
          # ${GITHUB_WORKSPACE}/config ${GITHUB_WORKSPACE}/postgre ${GITHUB_WORKSPACE}/.env ${GITHUB_WORKSPACE}/docker-compose.yml ${GITHUB_WORKSPACE}/deploy.sh \
          # ${{ secrets.USER_SERVER }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }}:./web-bit
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER_SERVER }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }} "
          cd web-bit &&
          chmod +x ./deploy.sh &&
          ./deploy.sh"

      - name: cleanup
        run: rm -rf ~/.ssh
