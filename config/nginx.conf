worker_processes auto;

events {
  worker_connections 1024;
}



http {
  include /etc/nginx/sites-enabled/*;
  real_ip_header X-Forwarded-For;

  upstream backend {
    server backend:8080;
  }

  upstream frontend {
    server frontend:3000;
  }

  server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name auctionforfun.site www.auctionforfun.site;

    location / {
      return 301 https://$host$request_uri;
    }

    location ~ /.well-known/acme-challenge/ {
      allow all;
      root /var/www/html;
    }

    
  }


  server {
    listen 443 ssl http2 ;
    listen [::]:443 ssl http2 ;

    server_name auctionforfun.site www.auctionforfun.site;
    #  server_tokens off;
    ssl_certificate /etc/letsencrypt/live/auctionforfun.site/certificate.crt;
    ssl_certificate_key /etc/letsencrypt/live/auctionforfun.site/private.key;
    ssl_dhparam /etc/letsencrypt/dhparams/dhparams.pem;
    ssl_buffer_size 8k;

    # enable gzip compression
    gzip             on;
    gzip_static      on;
    gzip_min_length  1000;
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types       text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    root /var/www/html;
    index index.html index.htm;

    ssl_protocols         TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA";
    ssl_prefer_server_ciphers on;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
    add_header Cache-Control "no-cache, no-store";

    location / {
      proxy_pass http://frontend;
      proxy_hide_header     "X-Frame-Options";
      proxy_read_timeout    300;
      proxy_connect_timeout 300;
      proxy_send_timeout    300;
      #proxy
      proxy_set_header      Host $host;
      proxy_set_header      X-REAL-IP $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header      X-Forwarded-Proto $scheme;
      proxy_set_header      X-Frame-Options "SAMEORIGIN";
      proxy_no_cache        $http_pragma $http_authorization;
    }

    location /ws {
      proxy_pass http://backend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade; # allow websockets
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header      X-REAL-IP $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header      X-Forwarded-Proto http;
    }

    location /api {
      proxy_pass http://backend;
      proxy_set_header      X-REAL-IP $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header      X-Forwarded-Proto http;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade; # allow websockets
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
    }

    location /swagger-ui.html {
      proxy_pass http://backend/api/v1/swagger-ui.html;
      proxy_set_header      X-REAL-IP $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header      X-Forwarded-Proto http;
      proxy_set_header      X-Frame-Options "SAMEORIGIN";
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade; # allow websockets
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
    }

    location /v3/api-docs {
      proxy_pass http://backend/api/v1/v3/api-docs;
      proxy_set_header      X-REAL-IP $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header      X-Forwarded-Proto http;
      proxy_set_header      X-Frame-Options "SAMEORIGIN";
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade; # allow websockets
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;

    }



    error_page 404 /404.html;
    location = /404.html {
      internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      internal;
    }
  }
}
